#!@WISHLOC@ -f

# @WARNGC@ XGamesman.in

proc main {} {
    wm title . "GAMESMAN"
    wm geometry . =800x600


    set theBitmapDir "../bitmaps"
    set thePrograms { achi nim rubix slideN ttt3 qx 1210 lite3 tactix ctoi \
		win4 dodgem lgame sim 3spot con cmass dnb foxes stt }
    set theStrings  { "Achi" "Nim" "Rubix Magic" "Slide-N" "Tic-Tac-Toe" \
		"QuickCross" "1,2,...,10" "Lite-3" "Tac Tix" "Chung-Toi" \
		"Connect 4" "Dodgem" "L Game" "Sim" "3-Dot" "Connections!" \
		"Critical Mass" "Dots and Boxes" "Foxes and Geese" "Shift-Tac-Toe" }
    set theGuiTypes { gold gold gold gold gold gold gold gold gold \
			grey grey grey grey grey \
			brown brown brown brown brown brown }
    set theNumberOfPrograms [llength $thePrograms]

    set menu .leftSide.menu
    set leftScroll .leftSide.leftScroll
    set leftBottom .leftSide.leftBottom

    set home .rightSide.home
    set rightScroll .rightSide.rightScroll
    set rightBottom .rightSide.rightBottom

    frame .leftSide
    frame .rightSide

    frame $menu -height [expr $theNumberOfPrograms * 50]
    frame $leftScroll -width 10 -background red
    frame $leftBottom -background blue

    canvas $home -background pink
    frame $rightScroll -width 10 -background red
    frame $rightBottom -background blue

    pack .leftSide -fill y -side left
    pack .rightSide -fill both -side left -expand 1

    pack $leftBottom -fill x -side bottom
    pack $leftScroll -fill y -side left
    pack $menu -fill y -side left

    pack $rightBottom -fill x -side bottom
    pack $rightScroll -fill y -side right
    pack $home -fill both -side right -expand 1

    CreateGamePages $home $thePrograms $theStrings
    CreateMenuButtons $theBitmapDir $thePrograms $theStrings $theGuiTypes $menu $home
    CreateHomeButton $leftBottom $home $rightBottom.buttons
    CreateLaunchButtons $rightBottom.buttons
}

proc CreateMenuButtons { theBitmapDir thePrograms theStrings theGuiTypes frame home} {
    set theNumberOfPrograms [llength $thePrograms]
    for { set i 0 } { $i < $theNumberOfPrograms } { incr i } {
	set theProgram "./Xm[lindex $thePrograms $i]"
	set gameName [lindex $thePrograms $i]
	set theString [lindex $theStrings $i]
	set theGif "$theBitmapDir/[lindex $thePrograms $i]100.gif"
	set theColor [lindex $theGuiTypes $i]
	catch { image delete image$i }
	catch { image delete small$i }
	image create photo image$i -file $theGif
	image create photo small$i
	small$i copy image$i -subsample 2
	set borderWidth 0
	button $frame.gameBut$i \
		-compound right \
		-image small$i \
		-text $theString \
        	-bg $theColor \
        	-borderwidth $borderWidth \
		-width 120 \
		-height 50 \
		-anchor e \
		-command "SetLaunchButtons .rightSide.rightBottom.buttons [list $thePrograms] $i; \
			$home itemconfigure viewer -window $home.$gameName"
	pack $frame.gameBut$i -side top -anchor ne
    }
}

proc CreateLaunchButtons { rightBottom } {
    canvas $rightBottom
    button $rightBottom.prev \
	-text "Previous" \
	-bg gold \
	-state disabled
    button $rightBottom.playGui \
	-text "Play Gui" \
	-bg gold \
	-state disabled
    button $rightBottom.playText \
	-text "Play Text" \
	-bg gold \
	-state disabled
    button $rightBottom.next \
	-text "Next" \
	-bg gold \
	-state disabled

    pack $rightBottom.prev -side left
    pack $rightBottom.playGui -side left
    pack $rightBottom.playText -side left
    pack $rightBottom.next -side left
    pack $rightBottom -anchor center
}

proc SetLaunchButtons { rightBottom thePrograms i } {
    set theNumberOfPrograms [llength $thePrograms]
    set theProgram "./Xm[lindex $thePrograms $i]"
    set gameName [lindex $thePrograms $i]
    set prevGameName [lindex $thePrograms [expr $i - 1]]
    set nextGameName [lindex $thePrograms [expr $i + 1]]
    set home .rightSide.home
    if { $i == 0 } {
	$rightBottom.prev configure -state disabled
    } else {
	$rightBottom.prev configure -state normal \
		-command "SetLaunchButtons $rightBottom [list $thePrograms] [expr $i - 1]; \
			$home itemconfigure viewer -window $home.$prevGameName"
    }

    $rightBottom.playGui configure \
	-command "exec @WISHLOC@ -f $theProgram &" -state normal

    $rightBottom.playText configure -state disabled

    if { $i == [expr $theNumberOfPrograms - 1] } {
	$rightBottom.next configure -state disabled
    } else {
	$rightBottom.next configure -state normal \
		-command "SetLaunchButtons $rightBottom [list $thePrograms] [expr $i + 1]; \
			$home itemconfigure viewer -window $home.$nextGameName"
    }
}

proc CreateHomeButton { frame home rightBottom } {
    button $frame.home -text "Home" -bg gold \
	-command "$home itemconfigure viewer -window $home.main; \
			$rightBottom.prev configure -state disabled; \
			$rightBottom.playGui configure -state disabled; \
			$rightBottom.playText configure -state disabled; \
			$rightBottom.next configure -state disabled"
    pack $frame.home -anchor center
}

proc CreateGamePages { frame thePrograms theStrings } {
    set theNumberOfPrograms [llength $thePrograms]

    ##### Starting Page ########
    canvas $frame.main -background gold
    ## end start page

    ##### window displaying content of main frame ####
    $frame create window 0 0 -width [expr 800 - 165] -height [expr 600 - 30] \
	-tags [list viewer] -anchor nw
    ## end window

    ### this loop creates default content for game specific pages
    for { set i 0 } { $i < $theNumberOfPrograms } { incr i } {
	set gameName [lindex $thePrograms $i]
	set gameString [lindex $theStrings $i]
	canvas $frame.$gameName -background grey
	message $frame.$gameName.title -text $gameString -anchor center
	pack $frame.$gameName.title -anchor center -fill x
	pack $frame.$gameName -fill both -expand 1

	$frame itemconfigure viewer -window $frame.$gameName
    }
    $frame itemconfigure viewer -window $frame.main
}

### Call the main procedure.
main

